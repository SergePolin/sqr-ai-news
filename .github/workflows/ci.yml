name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        export PATH="/root/.local/bin:$PATH"
    
    - name: Install dependencies
      run: |
        poetry install
    
    - name: Run flake8
      run: |
        poetry run flake8 app tests
    
    - name: Run ruff
      run: |
        poetry run pip install ruff
        poetry run ruff check app tests

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        export PATH="/root/.local/bin:$PATH"
    
    - name: Install dependencies
      run: |
        poetry install
    
    - name: Run Bandit security checks
      run: |
        poetry run bandit -r app -f json -o bandit-report.json -ll
    
    - name: Upload security report
      uses: actions/upload-artifact@v4
      with:
        name: security-report
        path: bandit-report.json

  test:
    runs-on: ubuntu-latest
    needs: [lint, security]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        export PATH="/root/.local/bin:$PATH"
    
    - name: Install dependencies
      run: |
        poetry install
    
    - name: Start backend API (background)
      run: |
        poetry run uvicorn app.main:app --host 0.0.0.0 --port 8000 &
        sleep 5  # Wait for app to start
    
    - name: Start Streamlit frontend (background)
      run: |
        cd frontend
        poetry run streamlit run streamlit_app.py --server.port=8501 --server.headless=true &
        sleep 10  # Wait for Streamlit to start
    
    - name: Run unit tests
      run: |
        poetry run pytest tests/unit --cov=app --cov-report=xml
    
    - name: Run integration tests
      run: |
        poetry run pytest tests/integration --cov=app --cov-append --cov-report=xml
    
    - name: Run API tests
      run: |
        poetry run pytest tests/api --cov=app --cov-append --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
    
    - name: Generate HTML coverage report
      run: |
        poetry run pytest --cov=app --cov-report=html
    
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: htmlcov/

  mutation:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        export PATH="/root/.local/bin:$PATH"
    
    - name: Install dependencies
      run: |
        poetry install
        poetry run pip install mutmut
    
    - name: Run mutation testing
      run: |
        poetry run mutmut run --paths-to-mutate app
    
    - name: Generate mutation report
      run: |
        poetry run mutmut junitxml > mutation-report.xml
    
    - name: Upload mutation report
      uses: actions/upload-artifact@v4
      with:
        name: mutation-report
        path: mutation-report.xml

  performance:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        export PATH="/root/.local/bin:$PATH"
    
    - name: Install dependencies
      run: |
        poetry install
        poetry run pip install locust
    
    - name: Start application (background)
      run: |
        poetry run uvicorn app.main:app --host 0.0.0.0 --port 8000 &
        sleep 5  # Wait for app to start
    
    - name: Run performance tests
      run: |
        mkdir -p performance-reports
        poetry run locust -f tests/performance/test_api_performance.py --headless -u 10 -r 2 --run-time 30s --host http://localhost:8000 --html performance-reports/report.html
    
    - name: Upload performance report
      uses: actions/upload-artifact@v4
      with:
        name: performance-report
        path: performance-reports/ 