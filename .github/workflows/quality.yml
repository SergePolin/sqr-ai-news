name: Quality Checks

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  quality:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: poetry install

      # Linting
      - name: Run Ruff linter
        run: poetry run ruff check app tests --output-format=github > ruff_report.txt || true

      # Security
      - name: Run Bandit security checks
        run: poetry run bandit -r app -f json -o bandit-report.json -ll

      # Tests
      - name: Run tests with coverage
        run: poetry run pytest --cov=app --cov-report=xml --cov-report=term

      # Coverage HTML report
      - name: Generate HTML coverage report
        run: poetry run coverage html

      # Create quality report
      - name: Generate quality assessment report
        run: |
          echo "# Quality Assessment Report" > quality_assessment_report.md
          echo "" >> quality_assessment_report.md
          echo "Generated on: $(date)" >> quality_assessment_report.md
          echo "" >> quality_assessment_report.md

          echo "## Test Coverage" >> quality_assessment_report.md
          echo "" >> quality_assessment_report.md
          echo "\`\`\`" >> quality_assessment_report.md
          poetry run coverage report >> quality_assessment_report.md
          echo "\`\`\`" >> quality_assessment_report.md
          echo "" >> quality_assessment_report.md

          echo "## Linting Results" >> quality_assessment_report.md
          echo "" >> quality_assessment_report.md
          echo "\`\`\`" >> quality_assessment_report.md
          cat ruff_report.txt >> quality_assessment_report.md || echo "No linting issues found." >> quality_assessment_report.md
          echo "\`\`\`" >> quality_assessment_report.md
          echo "" >> quality_assessment_report.md

          echo "## Security Scan" >> quality_assessment_report.md
          echo "" >> quality_assessment_report.md
          echo "See attached bandit-report.json for details." >> quality_assessment_report.md
          echo "" >> quality_assessment_report.md

          echo "## Overall Assessment" >> quality_assessment_report.md
          echo "" >> quality_assessment_report.md

          # Calculate total score
          COV_SCORE=$(poetry run coverage report | grep TOTAL | awk '{print $NF}' | tr -d '%')
          SECURITY_ISSUES=$(grep -o "\"issue_count\": [0-9]*" bandit-report.json | awk '{print $2}')

          if [ -z "$SECURITY_ISSUES" ]; then
            SECURITY_ISSUES=0
          fi

          echo "| Metric | Score | Target | Status |" >> quality_assessment_report.md
          echo "|--------|-------|--------|--------|" >> quality_assessment_report.md

          if [ "$COV_SCORE" -ge 60 ]; then
            echo "| Coverage | ${COV_SCORE}% | ≥ 60% | ✅ PASSED |" >> quality_assessment_report.md
          else
            echo "| Coverage | ${COV_SCORE}% | ≥ 60% | ❌ FAILED |" >> quality_assessment_report.md
          fi

          if [ "$SECURITY_ISSUES" -eq 0 ]; then
            echo "| Security | ${SECURITY_ISSUES} issues | 0 | ✅ PASSED |" >> quality_assessment_report.md
          else
            echo "| Security | ${SECURITY_ISSUES} issues | 0 | ❌ FAILED |" >> quality_assessment_report.md
          fi

          LINT_ISSUES=$(wc -l < ruff_report.txt || echo 0)
          if [ "$LINT_ISSUES" -eq 0 ]; then
            echo "| Linting | ${LINT_ISSUES} issues | 0 | ✅ PASSED |" >> quality_assessment_report.md
          else
            echo "| Linting | ${LINT_ISSUES} issues | 0 | ❌ FAILED |" >> quality_assessment_report.md
          fi

      # Upload artifacts
      - name: Upload quality report
        uses: actions/upload-artifact@v3
        with:
          name: quality-report
          path: quality_assessment_report.md
          retention-days: 5

      - name: Upload security report
        uses: actions/upload-artifact@v3
        with:
          name: security-report
          path: bandit-report.json
          retention-days: 5

      - name: Upload coverage report (XML)
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report-xml
          path: coverage.xml
          retention-days: 5

      - name: Upload coverage report (HTML)
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report-html
          path: htmlcov/
          retention-days: 5
